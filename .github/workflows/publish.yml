name: Deploy to Play Store

on:
  push:
    branches: [ master ]

jobs:

  test:
    name: Microtests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Grand execute permissions to gradlew
        run: chmod +x gradlew

      - name: Run unit tests
        run: ./gradlew testDebug

#  apk:
#    name: Generate APK
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        uses: actions/setup-java@v4
#        with:
#          distribution: 'temurin'
#          java-version: 17
#          cache: 'gradle'
#
#      - name: Assemble app debug APK
#        run: ./gradlew assembleDebug
#
#      - name: Upload app APK
#        uses: actions/upload-artifact@v3
#        with:
#          name: app-debug
#          path: app/build/outputs/apk/debug/app-debug.apk
#
#      - name: Assemble app instrumentation tests
#        run: ./gradlew assembleDebugAndroidTest
#
#      - name: Upload app test APK
#        uses: actions/upload-artifact@v3
#        with:
#          name: app-debug-androidTest
#          path: app/build/outputs/apk/androidTest/debug/app-debug-androidTest.apk
#
#  firebase:
#    name: Run UI tests with Firebase Test Lab
#    needs: apk
#    runs-on: ubuntu-latest
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Download app APK
#        uses: actions/download-artifact@v1
#        with:
#          name: app-debug
#
#      - name: Download app test APK
#        uses: actions/download-artifact@v1
#        with:
#          name: app-debug-androidTest
#
#      - id: Auth
#        uses: google-github-actions/auth@v0
#        with:
#          project_id: ${{ secrets.LYRICS_PROJECT_ID }}
#          credentials_json: ${{ secrets.FIREBASE_AUTH }}
#
#      - name: Set up Google Cloud SDK
#        uses: google-github-actions/setup-gcloud@v0
#
#      - name: Use gcloud CLI
#        run: gcloud info
#
#      - name: Run instrumentation tests in Firebase Test Lab
#        run: gcloud firebase test android run --type instrumentation --app app-debug/app-debug.apk --test app-debug-androidTest/app-debug-androidTest.apk --device model=blueline,version=28

  distribute:
    name: Distribute app version to Play Store
    needs: test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17
          cache: 'gradle'

      - name: Bump version
        uses: chkfung/android-version-actions@v1.2.3
        with:
          gradlePath: app/build.gradle
          versionCode: ${{github.run_number}}

      - name: Assemble release bundle
        run: ./gradlew bundleRelease

      - name: Sign release
        uses: ilharp/sign-android-release@v1
        id: sign_app
        with:
          releaseDir: app/build/outputs/bundle/release
          signingKey: ${{ secrets.ANDROID_KEYSTORE }}
          keyAlias: ${{ secrets.KEYSTORE_ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEYSTORE_PRIVATE_KEY_PASSWORD }}

      - name: Setup publishing authorization
        run: echo '${{ secrets.GOOGLE_SERVICES_API }}' > service_account.json

      - name: Deploy to alpha
        uses: r0adkll/upload-google-play@v1.1.3
        with:
          serviceAccountJson: service_account.json
          packageName: nl.jovmit.lyrics
          releaseFiles: ${{steps.sign_app.outputs.signedFile}}
          track: alpha
          status: 'completed'
          whatsNewDirectory: whatsNewDirectory/